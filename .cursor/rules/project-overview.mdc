---
description:
globs:
alwaysApply: false
---
# Project Overview

This project, `JiraScope`, is a Python application for analyzing Jira data. It has both a Command Line Interface (CLI) and a web interface.

## Key Directories

*   `src/jirascope`: Contains the core Python source code for the application.
    *   `analysis`: Modules for analyzing Jira data.
    *   `cli`: The command-line interface. The main entry point is `[src/jirascope/cli/main.py](mdc:src/jirascope/cli/main.py)`.
    *   `clients`: Clients for interacting with external services like Jira, Claude, etc.
    *   `core`: Core components like configuration management (`[src/jirascope/core/config.py](mdc:src/jirascope/core/config.py)`).
    *   `extractors`: Code for extracting data from sources like Jira (`[src/jirascope/extractors/jira_extractor.py](mdc:src/jirascope/extractors/jira_extractor.py)`).
    *   `pipeline`: Data processing pipelines.
*   `src/web`: Contains the source code for the web interface. The main entry point is `[src/web/main.py](mdc:src/web/main.py)`.
*   `tests`: Contains all tests for the project.
*   `config`: Directory for configuration files.
*   `data`: Directory for data files.

## Dependencies

Python dependencies are managed in `[pyproject.toml](mdc:pyproject.toml)`.

## Containerization

The project can be run using Docker. See `[Dockerfile](mdc:Dockerfile)` and `[docker-compose.yml](mdc:docker-compose.yml)`.

- **Package Configuration**: [pyproject.toml](mdc:pyproject.toml) defines dependencies and CLI entry points
- **Docker**: [docker-compose.yml](mdc:docker-compose.yml) and [Dockerfile](mdc:Dockerfile) for containerized deployment
- **Environment**: Sample configuration in [config/env.example](mdc:config/env.example)

## Testing Strategy

Comprehensive test suite with three levels:
- **Unit Tests**: [tests/unit/](mdc:tests/unit) for isolated component testing
- **Integration Tests**: [tests/integration/](mdc:tests/integration) for external service integration
- **Component Tests**: Root-level tests for full pipeline testing
